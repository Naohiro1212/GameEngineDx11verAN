#pragma once
#include <d3d11.h>
#include <DirectXMath.h>
#include <d3dcompiler.h>

#include "string"
#include "Texture.h"
#include "Transform.h"

using namespace DirectX;

// 2D画像を表示するためのクラス（実際にはポリゴンを平面的に表示しているだけ
class Sprite
{
protected:
	// 一つの頂点情報を格納する構造体
	struct VERTEX
	{
		XMFLOAT3 position;
		XMFLOAT3 uv;
	};

	// 【コンスタントバッファー】
	// GPU（シェーダ側）へ送る数値をまとめた構造体
	// Simple2D.hlslのグローバル変数と対応させる
	struct CONSTANT_BUFFER
	{
		XMMATRIX world;     // 頂点座標変換行列
		XMMATRIX uvTrans;   // テクスチャ座標変換行列
		XMFLOAT4 color;     // テクスチャとの合成色
	};

	// 【頂点バッファ】
	// 各頂点の情報（位置と色とか）を格納するところ
	// 頂点数分の配列にして使う
	ID3D11Buffer* pVertexBuffer_;

	// 【インデックスバッファ】
	// 「どの頂点」と「どの頂点」と「どの頂点」で3角形ポリゴンになるかの情報を格納するところ
	ID3D11Buffer* pIndexBuffer_;

	// 【テクスチャ】
	Texture* pTexture_;

	// 【定数バッファ】
	// シェーダー（Simple2D.hlsl）のグローバル変数に値を渡すためのもの
	ID3D11Buffer* pConstantBuffer_;

	// private関数
	// Load関数から呼ばれる
	void InitVertex(); // 頂点バッファ準備
	void InitIndex();  // インデックスバッファ準備
	void InitConstantBuffer(); // コンスタントバッファ（シェーダーに準備を送るやつ）準備

public:
	Sprite();
	~Sprite();

	// 


};